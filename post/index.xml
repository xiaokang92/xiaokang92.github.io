<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Python学习</title>
    <link>https://xiaokang92.github.io/post/</link>
    <description>Recent content in Posts on Python学习</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 28 Mar 2020 10:25:09 +0800</lastBuildDate>
    
	<atom:link href="https://xiaokang92.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linux基础正则</title>
      <link>https://xiaokang92.github.io/post/linux%E5%9F%BA%E7%A1%80%E6%AD%A3%E5%88%99/</link>
      <pubDate>Sat, 28 Mar 2020 10:25:09 +0800</pubDate>
      
      <guid>https://xiaokang92.github.io/post/linux%E5%9F%BA%E7%A1%80%E6%AD%A3%E5%88%99/</guid>
      <description>^ :表示一行的开头 $ :表示行尾 [0-9] :表示数字 [a-z] :表示小写字母 [A_Z] :表示大写字母 [A-Za-z] :表示大写或者小写字母 . :表示任意字符 * :表示任意长度 + :表示1次或多次 ? :表示0次或1次 \{n\} :表示匹配n次 \{n,m\} :表示匹配n-m次 \{n,\} :表示匹配至少n次 \{,n\} :表示最多匹配n次 | :表示或者的意思   应用场景：可以配合less使用</description>
    </item>
    
    <item>
      <title>RobotFramework两种下拉框选择</title>
      <link>https://xiaokang92.github.io/post/robotframework%E4%B8%A4%E7%A7%8D%E4%B8%8B%E6%8B%89%E6%A1%86%E9%80%89%E6%8B%A9/</link>
      <pubDate>Thu, 12 Mar 2020 15:10:42 +0800</pubDate>
      
      <guid>https://xiaokang92.github.io/post/robotframework%E4%B8%A4%E7%A7%8D%E4%B8%8B%E6%8B%89%E6%A1%86%E9%80%89%E6%8B%A9/</guid>
      <description>两种下拉框选择demo
浏览器悬浮显示并选择 open browser https://tieba.baidu.com/ chrome maximize browser window add cookie BDUSS RzOVVQY09oaXAyeGFETTJIS3lXU2lUWk9iYTRUxjSmRIYmswZ3c2aDFsNFplRVFBQUFBJCQAAAAAAAAAAAEAAABEE-sk1Nm4x9K7wqUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHUKX151Cl9e add cookie STOKEN 3c6363cb0bede0cfd3ab8126b256cd0b7700ad471e491ce0cc56a40f147f6995 goto https://tieba.baidu.com/ mouse over xpath=//li[@class=&amp;#34;u_username&amp;#34;] mouse over xpath=//li[@class=&amp;#34;u_itieba&amp;#34;]/a mouse down xpath=//li[@class=&amp;#34;u_itieba&amp;#34;]/a mouse up xpath=//li[@class=&amp;#34;u_itieba&amp;#34;]/a 浏览器下拉框选择 open browser https://tieba.baidu.com/ chrome maximize browser window add cookie BDUSS RzOVVQY09oaXAyeGFETTJIS3lXU2lUWiYTBtRUxjSmRIYmswZ3c2aDFsNFplRVFBQUFBJCQAAAAAAAAAAAEAAABEE-sk1Nm4x9K7wqUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHUKX151Cl9e add cookie STOKEN 3c6363cb0bede0cfd3ab8126b256cd0b7700ad471e491ce0cc56a40f147f6995 goto https://tieba.baidu.com/ click button xpath=//input[@name=&amp;#34;kw1&amp;#34;] FOR ${i} IN RANGE 9 \ log ${i} \ Press Key xpath=//input[@name=&amp;#34;kw1&amp;#34;] \ue015 \ sleep 0.5 Press Key xpath=//input[@name=&amp;#34;kw1&amp;#34;] \\13 </description>
    </item>
    
    <item>
      <title>软件产品测试周期</title>
      <link>https://xiaokang92.github.io/post/%E8%BD%AF%E4%BB%B6%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%95%E5%91%A8%E6%9C%9F/</link>
      <pubDate>Mon, 09 Mar 2020 10:08:33 +0800</pubDate>
      
      <guid>https://xiaokang92.github.io/post/%E8%BD%AF%E4%BB%B6%E4%BA%A7%E5%93%81%E6%B5%8B%E8%AF%95%E5%91%A8%E6%9C%9F/</guid>
      <description>软件产品测试周期：
 测试计划 测试设计 测试开发 测试执行 测试评估  软件产品测试流程：
 需求分析阶段 软件设计和编码阶段（进行单元测试） 集成系统 验收测试阶段  按照开发阶段划分：
 软件测试可以分为单元测试、集成测试、系统测试、验收测试、回归测试 单元测试：对于软件中的最小可验证单元去进行验证和检查，就像对Java中的类和方法的测试  测试原则：
 尽可能保证测试用例相互独立（测试用例中不能直接调用其他类的方法，应该在测试用例中重写模拟方法) 此阶段由软件的开发人员来实施，用以检验所开发的代码功能符合自己的设计要求  集成测试：
集成测试是在单元测试的基础上，把软件单元按照软件概要设计规格说明的规格要求，组装成模块，子系统或系统的过程中各部分工作是否达到或实现相应技术指标及要求。
系统测试：
将经过集成测试的软件，作为计算机系统的一部分，与系统中其它部分结合起来，在实际运行环境下进行一系列严格有效的测试，以发现软件潜在的问题，保证系统的正常运行。
验收测试：
也称交付测试，是针对用户需求、业务流程进行的正式的测试，以确定系统是否满足验收标准，由用户、客户或其他授权机构决定是否接受系统。
验收测试包括alpha测试和beta测试：
 alpha测试是由开发者进行的软件测试（公司的内网） beta测试是由用户（外网）在脱离开发环境下进行的软件测试  回归测试：
修改了旧代码后，重新进行测试以确认修改没有引入新的错误或导致其他代码产生错误。</description>
    </item>
    
    <item>
      <title>RobotFramework自定义Library</title>
      <link>https://xiaokang92.github.io/post/robotframework%E8%87%AA%E5%AE%9A%E4%B9%89library/</link>
      <pubDate>Mon, 09 Mar 2020 00:19:52 +0800</pubDate>
      
      <guid>https://xiaokang92.github.io/post/robotframework%E8%87%AA%E5%AE%9A%E4%B9%89library/</guid>
      <description>RobotFramework是开源的项目，我们可以根据项目需要，对RF进行二次开发，比如可以自定义关键字库。
自定义Library demo
本文自定义了一个叫NewLibrary的库 C:\Users\Administrator\AppData\Local\Programs\Python\Python37\Lib\site-packages\NewLibrary  在\Lib\site-packages\目录下创建一个NewLibrary文件夹，并且新增两个py文件：init.py , myclass.py
文件的内容如下：__init__.py
from myclass import MyClass class NewLibrary(MyClass): ROBOT_LIBRARY_SCOPE = &amp;#39;GLOBAL&amp;#39; myclass.py
from selenium import webdriver import time class MyClass(object): def __init__(self): pass def printMsg(self, msg): print(&amp;#34;hello&amp;#34; + msg) def SlideTieBa(self): browser = webdriver.Chrome() browser.implicitly_wait(30) browser.get(&amp;#34;https://tieba.baidu.com/&amp;#34;) browser.maximize_window() Listcookie = [{&amp;#39;name&amp;#39;:&amp;#34;STOKEN&amp;#34;,&amp;#39;value&amp;#39;:&amp;#34;3c6363cb0bede0cfd3ab8126b2700ad471e491ce0cc56a40f147f6995&amp;#34;} ,{&amp;#39;name&amp;#39;:&amp;#34;BDUSS&amp;#34;,&amp;#39;value&amp;#39;:&amp;#34;RzOVVQY09oaXAyeGFETTJIS3lXU2lUWk9iYTBtRUxjSmRIYmswZ3c2aDFsNFplRVFBQUFBJAAAEAAABEE-sk1Nm4x9K7wqUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHUKX151Cl9eVz&amp;#34;}] for cookie in Listcookie: browser.add_cookie(cookie) browser.get(&amp;#34;https://tieba.baidu.com/&amp;#34;) browser.refresh() for i in range(1000): t = i #tt = &amp;#39;window.scrollBy(0,&amp;#39; + str(t) + &amp;#39;)&amp;#39; tt = &amp;#39;window.</description>
    </item>
    
    <item>
      <title>RobotFramework框架：Cookie登录和缓慢滚动下滑</title>
      <link>https://xiaokang92.github.io/post/cookie%E7%99%BB%E5%BD%95%E5%92%8C%E7%BC%93%E6%85%A2%E6%BB%9A%E5%8A%A8%E4%B8%8B%E6%BB%91/</link>
      <pubDate>Sun, 08 Mar 2020 23:21:59 +0800</pubDate>
      
      <guid>https://xiaokang92.github.io/post/cookie%E7%99%BB%E5%BD%95%E5%92%8C%E7%BC%93%E6%85%A2%E6%BB%9A%E5%8A%A8%E4%B8%8B%E6%BB%91/</guid>
      <description>cookie是手工登录账号后，通过get cookies获取的，然后再填入代码中。
浏览器滚动是使用for循环，调用execute javascript方法并增加sleep实现的。
demo Cookie登录和缓慢滚动下滑
ride edit中的代码
浏览器滚动下滑 open browser https://tieba.baidu.com/ chrome maximize browser window add cookie BDUSS RzOVVQY09oaXAyeGFETTJIS3lXU2lUWk9iYTBtRUxjSmRIYmswZ2aDFsNFplRVFBQUFBJCQAAAAAAAAAAAEAAABEE-sk1Nm4x9K7wqUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHUKX151Cl9eVz add cookie STOKEN 3c6363cb0bede0cfd3ab8126b256cd0b7700ad471e491ce0cc56a40f147f6995 goto https://tieba.baidu.com/ FOR ${i} IN RANGE 1000 \ ${t} setvariable ${i}*5 \ evaluate str(${t}) \ ${tt} Catenate SEPARATOR= document.documentElement.scrollTop= ${t} \ execute javascript ${tt} \ sleep 0.01  </description>
    </item>
    
    <item>
      <title>666</title>
      <link>https://xiaokang92.github.io/post/666/</link>
      <pubDate>Sun, 08 Mar 2020 10:40:12 +0800</pubDate>
      
      <guid>https://xiaokang92.github.io/post/666/</guid>
      <description>⁶⁶ ⁶⁶⁶⁶⁶⁶ ⁶⁶66⁶⁶⁶⁶ ₆₆₆₆可以啊.这波 ₆₆₆₆⁶⁶⁶⁶⁶⁶卧槽 ⁶⁶666⁶⁶⁶⁶⁶⁶66⁶⁶⁶⁶ 卧槽⁶⁶⁶⁶⁶⁶ ⁶6666⁶⁶666₆₆₆₆₆ 666 ⁶⁶⁶⁶⁶⁶ 666666₆₆₆₆₆₆ ₆⁶⁶⁶ ⁶⁶⁶⁶⁶⁶ ⁶⁶66⁶⁶⁶⁶ ₆₆₆₆可以啊.这波 ₆₆₆₆⁶⁶⁶⁶⁶⁶卧槽 ⁶⁶666⁶⁶⁶⁶⁶⁶66⁶⁶⁶⁶ 卧⁶⁶⁶ ⁶⁶⁶⁶⁶⁶
https://www.bilibili.com/video/av70816898/
demo gif</description>
    </item>
    
    <item>
      <title>Mysql操作记录</title>
      <link>https://xiaokang92.github.io/post/mysql%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Sun, 08 Mar 2020 10:39:13 +0800</pubDate>
      
      <guid>https://xiaokang92.github.io/post/mysql%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/</guid>
      <description>show databases; drop database world; create database test char set utf8; use test; show tables; select * from account_log; select * from goods; select goods_id,goods_name,shop_price from goods where cat_id !=3; select goods_id,goods_name,shop_price from goods where shop_price &amp;lt;= 100; select goods_id,goods_name,cat_id from goods where cat_id in(4,11); select goods_id,goods_name,cat_id from goods where cat_id = 4 or cat_id = 11; select goods_id,goods_name,shop_price from goods where shop_price between 100 and 500; select goods_id,goods_name,cat_id from goods where cat_id !</description>
    </item>
    
    <item>
      <title>Xlrd库操作excel表格</title>
      <link>https://xiaokang92.github.io/post/xlrd%E5%BA%93%E6%93%8D%E4%BD%9Cexcel%E8%A1%A8%E6%A0%BC/</link>
      <pubDate>Sun, 08 Mar 2020 10:36:57 +0800</pubDate>
      
      <guid>https://xiaokang92.github.io/post/xlrd%E5%BA%93%E6%93%8D%E4%BD%9Cexcel%E8%A1%A8%E6%A0%BC/</guid>
      <description># xlrd库操作excel表格 import xlrd import sys lst = __file__.split(&amp;#39;/&amp;#39;)[:-1] lst.append(&amp;#39;111.xlsx&amp;#39;) excelDir = &amp;#39;\\&amp;#39;.join(lst) workbook = xlrd.open_workbook(excelDir) # 查看存在哪些sheet表 print(workbook.sheet_names()) name1 = workbook.sheet_names()[0] # 通过sheet名获取表格内容 workSheet = workbook.sheet_by_name(name1) # 读取一行 rows = workSheet.row_values(0) # 读取一格（行,列） clos = workSheet.cell_value(4, 1) clos1 = workSheet.cell(4, 1).value print(rows) print(clos) print(clos1) print(workSheet.cell(4, 1).ctype) # 写入Excel表格 import xlrd from xlutils.copy import copy import sys lst = __file__.split(&amp;#39;/&amp;#39;)[:-1] lst.append(&amp;#39;111.xlsx&amp;#39;) excelDir = &amp;#39;\\&amp;#39;.join(lst) value = [&amp;#39;&amp;#39;, &amp;#39;man&amp;#39;, 22, &amp;#39;,china&amp;#39;] # 定义需要写入的文本 rb = xlrd.</description>
    </item>
    
    <item>
      <title>MySQLdb操作</title>
      <link>https://xiaokang92.github.io/post/mysqldb%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sun, 08 Mar 2020 10:35:54 +0800</pubDate>
      
      <guid>https://xiaokang92.github.io/post/mysqldb%E6%93%8D%E4%BD%9C/</guid>
      <description># 查询数据库 import MySQLdb conn = MySQLdb.connect( host=&amp;#39;localhost&amp;#39;, user=&amp;#39;root&amp;#39;, passwd=&amp;#39;root&amp;#39;, db=&amp;#39;test&amp;#39;, charset=&amp;#39;utf8&amp;#39; ) c = conn.cursor() c.execute(&amp;#34;select * from student&amp;#34;) rows = c.fetchall() for item in rows: print(item) # 数据库插入 import MySQLdb conn = MySQLdb.connect( host=&amp;#39;localhost&amp;#39;, user=&amp;#39;root&amp;#39;, passwd=&amp;#39;root&amp;#39;, db=&amp;#39;test&amp;#39;, charset=&amp;#39;utf8&amp;#39; ) c = conn.cursor() c.execute(&amp;#34;insert into student (sid,sname,sage,ssex) values(&amp;#39;09&amp;#39;,&amp;#39;汪晓康&amp;#39;,&amp;#39;19920812&amp;#39;,&amp;#39;男&amp;#39;)&amp;#34;) conn.commit() rows = c.fetchall() for item in rows: print(item) </description>
    </item>
    
    <item>
      <title>生成n位的随机验证码</title>
      <link>https://xiaokang92.github.io/post/%E7%94%9F%E6%88%90n%E4%BD%8D%E7%9A%84%E9%9A%8F%E6%9C%BA%E9%AA%8C%E8%AF%81%E7%A0%81/</link>
      <pubDate>Sun, 08 Mar 2020 10:23:00 +0800</pubDate>
      
      <guid>https://xiaokang92.github.io/post/%E7%94%9F%E6%88%90n%E4%BD%8D%E7%9A%84%E9%9A%8F%E6%9C%BA%E9%AA%8C%E8%AF%81%E7%A0%81/</guid>
      <description>随机验证码 Demo
# 生成n位的随机验证码 import random def Code(n=6, alph_flag=True): code = &amp;#39;&amp;#39; for i in range(n): rs1 = str(random.randint(0, 9)) if alph_flag: rs2 = chr(random.randint(97, 122)) rs3 = chr(random.randint(65, 90)) rs1 = random.choice([rs1, rs2, rs3]) code = code + rs1 return code print(Code(n=4, alph_flag=True)) </description>
    </item>
    
    <item>
      <title>创建一个简单webserver客户端</title>
      <link>https://xiaokang92.github.io/post/%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95webserver%E5%AE%A2%E6%88%B7%E7%AB%AF/</link>
      <pubDate>Sun, 08 Mar 2020 10:18:23 +0800</pubDate>
      
      <guid>https://xiaokang92.github.io/post/%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95webserver%E5%AE%A2%E6%88%B7%E7%AB%AF/</guid>
      <description># 手写一个webserver客户端 import socket import re sk = socket.socket() sk.bind((&amp;#39;127.0.0.1&amp;#39;, 8080)) sk.listen() while True: conn, addr = sk.accept() data = conn.recv(9000) data_str = str(data, encoding=&amp;#39;utf8&amp;#39;) # print(data_str) res = re.match(&amp;#39;\S+\s(\S+)\s&amp;#39;, data_str) print(res) url = res.group(1) print(url) if url == &amp;#39;/yingying/&amp;#39;: msg = b&amp;#39;hands up!&amp;#39; elif url == &amp;#39;/hpg/&amp;#39;: msg = b&amp;#39;hello word&amp;#39; else: msg = b&amp;#39;404 not found!&amp;#39; conn.send(b&amp;#39;HTTP/1.1 200 OK\r\n\r\n&amp;#39;) conn.send(msg) conn.close() </description>
    </item>
    
    <item>
      <title>删除文件夹中低于7个文件的文件夹</title>
      <link>https://xiaokang92.github.io/post/%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%AD%E4%BD%8E%E4%BA%8E7%E4%B8%AA%E6%96%87%E4%BB%B6%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B9/</link>
      <pubDate>Sun, 08 Mar 2020 10:16:01 +0800</pubDate>
      
      <guid>https://xiaokang92.github.io/post/%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%AD%E4%BD%8E%E4%BA%8E7%E4%B8%AA%E6%96%87%E4%BB%B6%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B9/</guid>
      <description>演示demo
#删除文件夹中低于7个文件的文件夹 import os import shutil rs3 = __file__ rs4 = rs3.split(&amp;#34;/&amp;#34;)[:-1] temp_path = &amp;#39;/&amp;#39;.join(rs4) listDir = os.listdir(temp_path) # print(listDir) for item in listDir: item = temp_path + &amp;#34;/&amp;#34; + item if os.path.isdir(item): listDir1 = os.listdir(item) if len(listDir1) &amp;lt;= 6: shutil.rmtree(item) print(&amp;#34;remove success&amp;#34;,item) else: print(&amp;#34;this is file&amp;#34;) </description>
    </item>
    
    <item>
      <title>爬虫：爬大量妹子图</title>
      <link>https://xiaokang92.github.io/post/%E7%88%AC%E8%99%AB%E7%88%AC%E5%A4%A7%E9%87%8F%E5%A6%B9%E5%AD%90%E5%9B%BE/</link>
      <pubDate>Sun, 08 Mar 2020 10:11:43 +0800</pubDate>
      
      <guid>https://xiaokang92.github.io/post/%E7%88%AC%E8%99%AB%E7%88%AC%E5%A4%A7%E9%87%8F%E5%A6%B9%E5%AD%90%E5%9B%BE/</guid>
      <description>#!/usr/bin/python # coding: UTF-8 import requests import re import os def GetLink(link): headers = {&amp;#39;User-Agent&amp;#39;: &amp;#39;Mozilla/5.0 (Windows; U; Windows NT6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6&amp;#39;} r = requests.get(link, headers=headers, timeout=20) r.encoding = r.apparent_encoding html_doc = r.text pattern = re.compile(r&amp;#39;\&amp;lt;a\s+href\=\&amp;#34;(\/pn\.x\S+)\&amp;#34;\s+title\=\&amp;#34;(\S+)\&amp;#34;\s+target&amp;#39;) result1 = pattern.findall(html_doc) return result1 def GetPicture(link): headers = {&amp;#39;User-Agent&amp;#39;: &amp;#39;Mozilla/5.0 (Windows; U; Windows NT6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6&amp;#39;} r = requests.get(link, headers=headers, timeout=20) r.encoding = r.apparent_encoding html_doc = r.text &amp;#34;&amp;#34;&amp;#34; src=&amp;#34;https://pic.ssz91.com/d7/3643/364391-1.jpg&amp;#34; &amp;#34;&amp;#34;&amp;#34; pattern = re.</description>
    </item>
    
    <item>
      <title>基于种子搜的番号搜索工具</title>
      <link>https://xiaokang92.github.io/post/%E5%9F%BA%E4%BA%8E%E7%A7%8D%E5%AD%90%E6%90%9C%E7%9A%84%E7%95%AA%E5%8F%B7%E6%90%9C%E7%B4%A2%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Sun, 08 Mar 2020 10:05:27 +0800</pubDate>
      
      <guid>https://xiaokang92.github.io/post/%E5%9F%BA%E4%BA%8E%E7%A7%8D%E5%AD%90%E6%90%9C%E7%9A%84%E7%95%AA%E5%8F%B7%E6%90%9C%E7%B4%A2%E5%B7%A5%E5%85%B7/</guid>
      <description>演示demo
#!/usr/bin/python # coding: UTF-8 import requests from bs4 import BeautifulSoup import re print(&amp;#34;请输入番号&amp;#34;) fh = input(&amp;#34;番号是：&amp;#34;) print(fh) link1 = &amp;#34;https://www.sobt5.vip/q/&amp;#34;+fh+&amp;#34;.html&amp;#34; headlink = &amp;#34;https://www.sobt5.vip&amp;#34; def GetLink(link): headers = {&amp;#39;User-Agent&amp;#39; : &amp;#39;Mozilla/5.0 (Windows; U; Windows NT6.1; en-US; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6&amp;#39;} r = requests.get(link, headers= headers) r.encoding = r.apparent_encoding html_doc = r.text soup = BeautifulSoup(html_doc,&amp;#34;html.parser&amp;#34;) pattern = re.compile(r&amp;#39;a href=&amp;#34;(\S+.html)&amp;#34;\s+target=&amp;#39;) result1 = pattern.findall(html_doc) return result1 def GetTorrent(link): headers = {&amp;#39;User-Agent&amp;#39; : &amp;#39;Mozilla/5.0 (Windows; U; Windows NT6.</description>
    </item>
    
  </channel>
</rss>